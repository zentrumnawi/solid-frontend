{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "projects": {
    "ais": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/ais",
      "sourceRoot": "apps/ais/src",
      "prefix": "zentrumnawi",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/ais",
            "index": "apps/ais/src/index.html",
            "main": "apps/ais/src/main.ts",
            "polyfills": "apps/ais/src/polyfills.ts",
            "tsConfig": "apps/ais/tsconfig.app.json",
            "assets": [
              "apps/ais/src/favicon.ico",
              "apps/ais/src/assets",
              "apps/ais/src/manifest.webmanifest"
            ],
            "styles": [
              "./node_modules/material-icons/iconfont/material-icons.scss",
              "apps/ais/src/styles.scss",
              "node_modules/intro.js/introjs.css"
            ],
            "scripts": ["node_modules/intro.js/intro.js"],
            "stylePreprocessorOptions": {
              "includePaths": [
                "libs/solid/core/src",
                "libs/solid/glossary/src",
                "libs/solid/skeleton/src",
                "libs/solid/slideshow/src",
                "libs/solid/quiz/src",
                "libs/solid/profile/src"
              ]
            },
            "vendorChunk": true,
            "extractLicenses": false,
            "buildOptimizer": false,
            "sourceMap": true,
            "optimization": false,
            "namedChunks": true
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/ais/src/environments/environment.ts",
                  "with": "apps/ais/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/ais/ngsw-config.json"
            },
            "staging": {
              "fileReplacements": [
                {
                  "replace": "apps/ais/src/environments/environment.ts",
                  "with": "apps/ais/src/environments/environment.staging.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "ngsw-config.json"
            }
          },
          "outputs": ["{options.outputPath}"],
          "defaultConfiguration": ""
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "ais:build",
            "proxyConfig": "./apps/ais/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "ais:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "ais:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/ais/src/**/*.ts",
              "apps/ais/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/ais/jest.config.js",
            "passWithNoTests": true,
            "tsConfig": "apps/ais/tsconfig.spec.json"
          },
          "outputs": ["coverage/apps/ais"]
        },
        "deploy": {
          "builder": "angular-cli-ghpages:deploy",
          "options": {
            "configuration": "staging",
            "baseHref": "/solid-frontend/",
            "name": "Github Actions",
            "email": "github@example.com"
          }
        }
      }
    },
    "dive": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/dive",
      "sourceRoot": "apps/dive/src",
      "prefix": "zentrumnawi",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/dive",
            "index": "apps/dive/src/index.html",
            "main": "apps/dive/src/main.ts",
            "polyfills": "apps/dive/src/polyfills.ts",
            "tsConfig": "apps/dive/tsconfig.app.json",
            "assets": [
              "apps/dive/src/favicon.ico",
              "apps/dive/src/assets",
              "apps/dive/src/manifest.webmanifest"
            ],
            "styles": [
              "./node_modules/material-icons/iconfont/material-icons.scss",
              "apps/dive/src/styles.scss",
              "node_modules/intro.js/introjs.css"
            ],
            "scripts": ["node_modules/intro.js/intro.js"],
            "stylePreprocessorOptions": {
              "includePaths": [
                "libs/solid/core/src",
                "libs/solid/glossary/src",
                "libs/solid/skeleton/src",
                "libs/solid/slideshow/src",
                "libs/solid/quiz/src",
                "libs/solid/profile/src"
              ]
            },
            "vendorChunk": true,
            "extractLicenses": false,
            "buildOptimizer": false,
            "sourceMap": true,
            "optimization": false,
            "namedChunks": true
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/dive/src/environments/environment.ts",
                  "with": "apps/dive/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/dive/ngsw-config.json"
            },
            "staging": {
              "fileReplacements": [
                {
                  "replace": "apps/dive/src/environments/environment.ts",
                  "with": "apps/dive/src/environments/environment.staging.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "ngsw-config.json"
            }
          },
          "outputs": ["{options.outputPath}"],
          "defaultConfiguration": ""
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "dive:build",
            "proxyConfig": "./apps/dive/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "dive:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "dive:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/dive/src/**/*.ts",
              "apps/dive/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/dive/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/dive"]
        },
        "deploy": {
          "builder": "angular-cli-ghpages:deploy",
          "options": {
            "configuration": "staging",
            "baseHref": "/solid-frontend/",
            "name": "Github Actions",
            "email": "github@example.com"
          }
        }
      }
    },
    "geomat": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/geomat",
      "sourceRoot": "apps/geomat/src",
      "prefix": "geomat",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/geomat",
            "index": "apps/geomat/src/index.html",
            "main": "apps/geomat/src/main.ts",
            "polyfills": "apps/geomat/src/polyfills.ts",
            "tsConfig": "apps/geomat/tsconfig.app.json",
            "assets": [
              "apps/geomat/src/favicon.ico",
              "apps/geomat/src/assets",
              "apps/geomat/src/manifest.webmanifest"
            ],
            "styles": [
              "./node_modules/material-icons/iconfont/material-icons.scss",
              "apps/geomat/src/styles.scss",
              "node_modules/intro.js/introjs.css"
            ],
            "scripts": ["node_modules/intro.js/intro.js"],
            "stylePreprocessorOptions": {
              "includePaths": [
                "libs/solid/core/src",
                "libs/solid/glossary/src",
                "libs/solid/slideshow/src",
                "libs/solid/skeleton/src",
                "libs/solid/quiz/src",
                "libs/solid/profile/src"
              ]
            },
            "vendorChunk": true,
            "extractLicenses": false,
            "buildOptimizer": false,
            "sourceMap": true,
            "optimization": false,
            "namedChunks": true
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/geomat/src/environments/environment.ts",
                  "with": "apps/geomat/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "ngsw-config.json"
            },
            "staging": {
              "fileReplacements": [
                {
                  "replace": "apps/geomat/src/environments/environment.ts",
                  "with": "apps/geomat/src/environments/environment.staging.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "ngsw-config.json"
            }
          },
          "outputs": ["{options.outputPath}"],
          "defaultConfiguration": ""
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "geomat:build",
            "proxyConfig": "./apps/geomat/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "geomat:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "geomat:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/geomat/src/**/*.ts",
              "apps/geomat/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/geomat/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/geomat"]
        }
      }
    },
    "planty": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/planty",
      "sourceRoot": "apps/planty/src",
      "prefix": "zentrumnawi",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/planty",
            "index": "apps/planty/src/index.html",
            "main": "apps/planty/src/main.ts",
            "polyfills": "apps/planty/src/polyfills.ts",
            "tsConfig": "apps/planty/tsconfig.app.json",
            "assets": [
              "apps/planty/src/favicon.ico",
              "apps/planty/src/assets",
              "apps/planty/src/manifest.webmanifest"
            ],
            "styles": [
              "./node_modules/material-icons/iconfont/material-icons.scss",
              "apps/planty/src/styles.scss",
              "node_modules/intro.js/introjs.css"
            ],
            "scripts": ["node_modules/intro.js/intro.js"],
            "stylePreprocessorOptions": {
              "includePaths": [
                "libs/solid/core/src",
                "libs/solid/glossary/src",
                "libs/solid/skeleton/src",
                "libs/solid/slideshow/src",
                "libs/solid/quiz/src",
                "libs/solid/profile/src"
              ]
            },
            "vendorChunk": true,
            "extractLicenses": false,
            "buildOptimizer": false,
            "sourceMap": true,
            "optimization": false,
            "namedChunks": true
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/planty/src/environments/environment.ts",
                  "with": "apps/planty/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/planty/ngsw-config.json"
            },
            "staging": {
              "fileReplacements": [
                {
                  "replace": "apps/planty/src/environments/environment.ts",
                  "with": "apps/planty/src/environments/environment.staging.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "ngsw-config.json"
            }
          },
          "outputs": ["{options.outputPath}"],
          "defaultConfiguration": ""
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "planty:build",
            "proxyConfig": "./apps/planty/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "planty:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "planty:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/planty/src/**/*.ts",
              "apps/planty/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/planty/jest.config.js",
            "passWithNoTests": true,
            "tsConfig": "apps/planty/tsconfig.spec.json"
          },
          "outputs": ["coverage/apps/planty"]
        },
        "deploy": {
          "builder": "angular-cli-ghpages:deploy",
          "options": {
            "configuration": "staging",
            "baseHref": "/solid-frontend/",
            "name": "Github Actions",
            "email": "github@example.com"
          }
        }
      }
    },
    "solid-core": {
      "projectType": "library",
      "root": "libs/solid/core",
      "sourceRoot": "libs/solid/core/src",
      "prefix": "solid-core",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/solid/core/tsconfig.lib.json",
            "project": "libs/solid/core/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/solid/core/tsconfig.lib.prod.json"
            },
            "staging": {
              "tsConfig": "libs/solid/core/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/solid/core/src/**/*.ts",
              "libs/solid/core/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/solid/core/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/solid/core"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "styleext": "scss"
        }
      }
    },
    "solid-glossary": {
      "projectType": "library",
      "root": "libs/solid/glossary",
      "sourceRoot": "libs/solid/glossary/src",
      "prefix": "solid-glossary",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/solid/glossary/tsconfig.lib.json",
            "project": "libs/solid/glossary/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/solid/glossary/tsconfig.lib.prod.json"
            },
            "staging": {
              "tsConfig": "libs/solid/glossary/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/solid/glossary/src/**/*.ts",
              "libs/solid/glossary/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/solid/glossary/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/solid/glossary"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "styleext": "scss"
        }
      }
    },
    "solid-profile": {
      "projectType": "library",
      "root": "libs/solid/profile",
      "sourceRoot": "libs/solid/profile/src",
      "prefix": "solid-profile",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/solid/profile/tsconfig.lib.json",
            "project": "libs/solid/profile/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/solid/profile/tsconfig.lib.prod.json"
            },
            "staging": {
              "tsConfig": "libs/solid/profile/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/solid/profile/src/**/*.ts",
              "libs/solid/profile/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/solid/profile/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/solid/profile"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "styleext": "scss"
        }
      }
    },
    "solid-quiz": {
      "projectType": "library",
      "root": "libs/solid/quiz",
      "sourceRoot": "libs/solid/quiz/src",
      "prefix": "solid-quiz",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/solid/quiz/tsconfig.lib.json",
            "project": "libs/solid/quiz/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/solid/quiz/tsconfig.lib.prod.json"
            },
            "staging": {
              "tsConfig": "libs/solid/quiz/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/solid/quiz/src/**/*.ts",
              "libs/solid/quiz/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/solid/quiz/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/solid/quiz"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "styleext": "scss"
        }
      }
    },
    "solid-skeleton": {
      "projectType": "library",
      "root": "libs/solid/skeleton",
      "sourceRoot": "libs/solid/skeleton/src",
      "prefix": "solid-skeleton",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "project": "libs/solid/skeleton/ng-package.json",
            "tsConfig": "libs/solid/skeleton/tsconfig.lib.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "project": "libs/solid/skeleton/ng-package.json",
              "tsConfig": "libs/solid/skeleton/tsconfig.lib.prod.json"
            },
            "staging": {
              "project": "libs/solid/skeleton/ng-package.json",
              "tsConfig": "libs/solid/skeleton/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/solid/skeleton/src/**/*.ts",
              "libs/solid/skeleton/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/solid/skeleton/jest.config.js",
            "passWithNoTests": false
          },
          "outputs": ["coverage/libs/solid/skeleton"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "styleext": "scss",
          "style": "scss"
        }
      },
      "dependencies": ["tools"]
    },
    "solid-slideshow": {
      "projectType": "library",
      "root": "libs/solid/slideshow",
      "sourceRoot": "libs/solid/slideshow/src",
      "prefix": "solid-slideshow",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/solid/slideshow/tsconfig.lib.json",
            "project": "libs/solid/slideshow/ng-package.json",
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/solid/profile/tsconfig.lib.prod.json"
            },
            "staging": {
              "tsConfig": "libs/solid/profile/tsconfig.lib.prod.json"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/solid/slideshow/src/**/*.ts",
              "libs/solid/slideshow/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/solid/slideshow/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/solid/slideshow"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "styleext": "scss"
        }
      }
    }
  }
}
