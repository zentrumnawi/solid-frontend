name: build

on:
  push:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Install packages
        run: yarn install

      - name: format
        run: yarn nx format:check --all

      - name: lint
        run: yarn nx run-many --target=lint --all --parallel

      - name: test
        run: yarn nx run-many --target=test --all --parallel

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage/**/clover.xml
          name: nx-jest

      - name: build - staging
        run: yarn nx run-many --target=build --all --parallel --configuration=staging

      - name: Deploy geomat-staging
        uses: appleboy/scp-action@v0.0.10
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          rm: true
          source: 'dist/apps/geomat'
          target: '${{ secrets.GEOMAT_STAGING_DIRECTORY }}'
          strip_components: 3

      - name: Deploy planty-staging
        uses: appleboy/scp-action@v0.0.10
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          rm: true
          source: 'dist/apps/planty'
          target: '${{ secrets.PLANTY_STAGING_DIRECTORY }}'
          strip_components: 3

      - name: Deploy ais-staging
        uses: appleboy/scp-action@v0.0.10
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          rm: true
          source: 'dist/apps/ais'
          target: '${{ secrets.AIS_STAGING_DIRECTORY }}'
          strip_components: 3

      - name: Deploy dive-staging
        uses: appleboy/scp-action@v0.0.10
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          rm: true
          source: 'dist/apps/dive'
          target: '${{ secrets.DIVE_STAGING_DIRECTORY }}'
          strip_components: 3

      - name: Deploy wabe-staging
        uses: appleboy/scp-action@v0.0.10
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          rm: true
          source: 'dist/apps/wabe'
          target: '${{ secrets.WABE_STAGING_DIRECTORY }}'
          strip_components: 3
