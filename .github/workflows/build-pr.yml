name: build-pr

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Enable Corepack
        run: corepack enable

      - name: Check Yarn installation
        run: |
          which yarn || echo "yarn not found"
          yarn --version && echo "Yarn version: $(yarn --version)" || echo "yarn not installed"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn install

      - name: format
        run: yarn format:check

      - name: lint
        run: yarn nx affected --target=lint --base=origin/dev --parallel

      - name: test
        run: yarn nx affected --target=test --base=origin/dev --parallel

      - name: build - staging
        run: yarn nx affected --target=build --base=origin/dev --parallel --configuration=staging
