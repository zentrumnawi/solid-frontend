import { InjectionToken } from '@angular/core';
import { MatDialogConfig } from '@angular/material/dialog';
import { of } from 'rxjs';
import { FeedbackComponent } from '../components/feedback/feedback.component';
import { catchError, map } from 'rxjs/operators';
export const SOLID_SKELETON_FEEDBACK_SERVICE = new InjectionToken(
  'SOLID_SKELETON_FEEDBACK_SERVICE'
);
export function feedbackServiceFactory(
  http,
  dialog,
  coreConfig,
  skeletonConfig
) {
  if (skeletonConfig.feedbackEnabled) {
    return new FeedbackService(http, dialog, coreConfig);
  }
  return null;
}
export class FeedbackService {
  _http;
  _dialog;
  _config;
  constructor(_http, _dialog, _config) {
    this._http = _http;
    this._dialog = _dialog;
    this._config = _config;
  }
  showDialog(location, title) {
    const dialogConfig = new MatDialogConfig();
    const report = title == '' ? 'Fehler melden' : 'Fehler melden - ' + title;
    dialogConfig.data = {
      location: location,
      title: location ? 'Fehler melden' : 'Kontakt und Feedback',
      subject: location ? report : 'Feedback',
    };
    this._dialog.open(FeedbackComponent, {
      data: dialogConfig.data,
      maxWidth: '600px',
      panelClass: location ? 'report-dialog' : 'feedback-dialog',
    });
  }
  submitFeedback(value) {
    return this._http.post(`${this._config.apiUrl}/contact`, value).pipe(
      map((_) => true),
      catchError((err) => of(false))
    );
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVlZGJhY2suc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvc29saWQvc2tlbGV0b24vc3JjL2xpYi9zZXJ2aWNlcy9mZWVkYmFjay5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFL0MsT0FBTyxFQUFhLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3RFLE9BQU8sRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDdEMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFFOUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUdqRCxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FDMUMsSUFBSSxjQUFjLENBQXlCLGlDQUFpQyxDQUFDLENBQUM7QUFFaEYsTUFBTSxVQUFVLHNCQUFzQixDQUNwQyxJQUFnQixFQUNoQixNQUFpQixFQUNqQixVQUEyQixFQUMzQixjQUEyQztJQUUzQyxJQUFJLGNBQWMsQ0FBQyxlQUFlLEVBQUU7UUFDbEMsT0FBTyxJQUFJLGVBQWUsQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0tBQ3REO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQsTUFBTSxPQUFPLGVBQWU7SUFFaEI7SUFDQTtJQUNBO0lBSFYsWUFDVSxLQUFpQixFQUNqQixPQUFrQixFQUNsQixPQUF3QjtRQUZ4QixVQUFLLEdBQUwsS0FBSyxDQUFZO1FBQ2pCLFlBQU8sR0FBUCxPQUFPLENBQVc7UUFDbEIsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7SUFDL0IsQ0FBQztJQUVHLFVBQVUsQ0FBQyxRQUFpQixFQUFFLEtBQWM7UUFDakQsTUFBTSxZQUFZLEdBQUcsSUFBSSxlQUFlLEVBQUUsQ0FBQztRQUMzQyxNQUFNLE1BQU0sR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQztRQUMxRSxZQUFZLENBQUMsSUFBSSxHQUFHO1lBQ2xCLFFBQVEsRUFBRSxRQUFRO1lBQ2xCLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsc0JBQXNCO1lBQzFELE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsVUFBVTtTQUN4QyxDQUFDO1FBQ0YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDbkMsSUFBSSxFQUFFLFlBQVksQ0FBQyxJQUFJO1lBQ3ZCLFFBQVEsRUFBRSxPQUFPO1lBQ2pCLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsaUJBQWlCO1NBQzNELENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxjQUFjLENBQUMsS0FBVTtRQUM5QixPQUFPLElBQUksQ0FBQyxLQUFLO2FBQ2QsSUFBSSxDQUFVLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLFVBQVUsRUFBRSxLQUFLLENBQUM7YUFDdEQsSUFBSSxDQUNILEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQ2hCLFVBQVUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQy9CLENBQUM7SUFDTixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBNYXREaWFsb2csIE1hdERpYWxvZ0NvbmZpZyB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEZlZWRiYWNrQ29tcG9uZW50IH0gZnJvbSAnLi4vY29tcG9uZW50cy9mZWVkYmFjay9mZWVkYmFjay5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb2xpZENvcmVDb25maWcgfSBmcm9tICdAemVudHJ1bW5hd2kvc29saWQtY29yZSc7XHJcbmltcG9ydCB7IGNhdGNoRXJyb3IsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHsgSW50ZXJuYWxTb2xpZFNrZWxldG9uQ29uZmlnIH0gZnJvbSAnLi4vc29saWQtc2tlbGV0b24tY29uZmlnJztcclxuXHJcbmV4cG9ydCBjb25zdCBTT0xJRF9TS0VMRVRPTl9GRUVEQkFDS19TRVJWSUNFID1cclxuICBuZXcgSW5qZWN0aW9uVG9rZW48RmVlZGJhY2tTZXJ2aWNlIHwgbnVsbD4oJ1NPTElEX1NLRUxFVE9OX0ZFRURCQUNLX1NFUlZJQ0UnKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBmZWVkYmFja1NlcnZpY2VGYWN0b3J5KFxyXG4gIGh0dHA6IEh0dHBDbGllbnQsXHJcbiAgZGlhbG9nOiBNYXREaWFsb2csXHJcbiAgY29yZUNvbmZpZzogU29saWRDb3JlQ29uZmlnLFxyXG4gIHNrZWxldG9uQ29uZmlnOiBJbnRlcm5hbFNvbGlkU2tlbGV0b25Db25maWdcclxuKSB7XHJcbiAgaWYgKHNrZWxldG9uQ29uZmlnLmZlZWRiYWNrRW5hYmxlZCkge1xyXG4gICAgcmV0dXJuIG5ldyBGZWVkYmFja1NlcnZpY2UoaHR0cCwgZGlhbG9nLCBjb3JlQ29uZmlnKTtcclxuICB9XHJcbiAgcmV0dXJuIG51bGw7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGZWVkYmFja1NlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBfaHR0cDogSHR0cENsaWVudCxcclxuICAgIHByaXZhdGUgX2RpYWxvZzogTWF0RGlhbG9nLFxyXG4gICAgcHJpdmF0ZSBfY29uZmlnOiBTb2xpZENvcmVDb25maWdcclxuICApIHt9XHJcblxyXG4gIHB1YmxpYyBzaG93RGlhbG9nKGxvY2F0aW9uPzogc3RyaW5nLCB0aXRsZT86IHN0cmluZykge1xyXG4gICAgY29uc3QgZGlhbG9nQ29uZmlnID0gbmV3IE1hdERpYWxvZ0NvbmZpZygpO1xyXG4gICAgY29uc3QgcmVwb3J0ID0gdGl0bGUgPT0gJycgPyAnRmVobGVyIG1lbGRlbicgOiAnRmVobGVyIG1lbGRlbiAtICcgKyB0aXRsZTtcclxuICAgIGRpYWxvZ0NvbmZpZy5kYXRhID0ge1xyXG4gICAgICBsb2NhdGlvbjogbG9jYXRpb24sXHJcbiAgICAgIHRpdGxlOiBsb2NhdGlvbiA/ICdGZWhsZXIgbWVsZGVuJyA6ICdLb250YWt0IHVuZCBGZWVkYmFjaycsXHJcbiAgICAgIHN1YmplY3Q6IGxvY2F0aW9uID8gcmVwb3J0IDogJ0ZlZWRiYWNrJyxcclxuICAgIH07XHJcbiAgICB0aGlzLl9kaWFsb2cub3BlbihGZWVkYmFja0NvbXBvbmVudCwge1xyXG4gICAgICBkYXRhOiBkaWFsb2dDb25maWcuZGF0YSxcclxuICAgICAgbWF4V2lkdGg6ICc2MDBweCcsXHJcbiAgICAgIHBhbmVsQ2xhc3M6IGxvY2F0aW9uID8gJ3JlcG9ydC1kaWFsb2cnIDogJ2ZlZWRiYWNrLWRpYWxvZycsXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzdWJtaXRGZWVkYmFjayh2YWx1ZTogYW55KTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XHJcbiAgICByZXR1cm4gdGhpcy5faHR0cFxyXG4gICAgICAucG9zdDx1bmtub3duPihgJHt0aGlzLl9jb25maWcuYXBpVXJsfS9jb250YWN0YCwgdmFsdWUpXHJcbiAgICAgIC5waXBlKFxyXG4gICAgICAgIG1hcCgoXykgPT4gdHJ1ZSksXHJcbiAgICAgICAgY2F0Y2hFcnJvcigoZXJyKSA9PiBvZihmYWxzZSkpXHJcbiAgICAgICk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
