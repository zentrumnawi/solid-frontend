import { LandingComponent } from './components/landing/landing.component';
import { InfoComponent } from './components/info/info.component';
export function generateRoutes(config) {
  const routes = [];
  const addRoute = (cfg) => {
    routes.push({
      path: cfg.url,
      component: cfg.component,
      data: {
        title: cfg.title,
        showInMenu: cfg.showInMenu,
        showOnLandingPage: cfg.showOnLandingPage,
        icon: cfg.matIcon,
        svgIcon: cfg.svgIcon,
        order: cfg.order,
        name: cfg.name,
      },
    });
  };
  const addModuleRoute = (cfg) => {
    routes.push({
      path: cfg.url,
      loadChildren: cfg.moduleImport,
      data: {
        title: cfg.title,
        showInMenu: cfg.showInMenu,
        showOnLandingPage: cfg.showOnLandingPage,
        icon: cfg.matIcon,
        svgIcon: cfg.svgIcon,
        order: cfg.order,
        name: cfg.name,
      },
    });
  };
  // landing page
  if (config.landing.enabled) {
    addRoute({ ...config.landing, component: LandingComponent });
  }
  if (config.profile.enabled) {
    addModuleRoute(config.profile);
  }
  if (config.quiz.enabled) {
    addModuleRoute(config.quiz);
  }
  if (config.slideshow.enabled) {
    addModuleRoute(config.slideshow);
  }
  if (config.info.enabled) {
    addRoute({ ...config.info, component: InfoComponent });
  }
  // if (config.privacy.enabled) {
  //   addRoute(config.privacy);
  // }
  config.custom?.forEach((custom) => {
    if (custom.enabled) {
      if (custom.component) {
        addRoute(custom);
      } else {
        addModuleRoute(custom);
      }
    }
  });
  routes.push({ path: '**', redirectTo: '' });
  return routes.sort((a, b) => a.data?.order - b.data?.order);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tlbGV0b24tcm91dGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvc29saWQvc2tlbGV0b24vc3JjL2xpYi9za2VsZXRvbi1yb3V0aW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBTzFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUVqRSxNQUFNLFVBQVUsY0FBYyxDQUFDLE1BQXFCO0lBQ2xELE1BQU0sTUFBTSxHQUFZLEVBQUUsQ0FBQztJQUMzQixNQUFNLFFBQVEsR0FBRyxDQUFDLEdBQTZCLEVBQUUsRUFBRTtRQUNqRCxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ1YsSUFBSSxFQUFFLEdBQUcsQ0FBQyxHQUFHO1lBQ2IsU0FBUyxFQUFFLEdBQUcsQ0FBQyxTQUFTO1lBQ3hCLElBQUksRUFBRTtnQkFDSixLQUFLLEVBQUUsR0FBRyxDQUFDLEtBQUs7Z0JBQ2hCLFVBQVUsRUFBRSxHQUFHLENBQUMsVUFBVTtnQkFDMUIsaUJBQWlCLEVBQUUsR0FBRyxDQUFDLGlCQUFpQjtnQkFDeEMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxPQUFPO2dCQUNqQixPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU87Z0JBQ3BCLEtBQUssRUFBRSxHQUFHLENBQUMsS0FBSztnQkFDaEIsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJO2FBQ2Y7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDLENBQUM7SUFDRixNQUFNLGNBQWMsR0FBRyxDQUFDLEdBQTBCLEVBQUUsRUFBRTtRQUNwRCxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ1YsSUFBSSxFQUFFLEdBQUcsQ0FBQyxHQUFHO1lBQ2IsWUFBWSxFQUFFLEdBQUcsQ0FBQyxZQUFZO1lBQzlCLElBQUksRUFBRTtnQkFDSixLQUFLLEVBQUUsR0FBRyxDQUFDLEtBQUs7Z0JBQ2hCLFVBQVUsRUFBRSxHQUFHLENBQUMsVUFBVTtnQkFDMUIsaUJBQWlCLEVBQUUsR0FBRyxDQUFDLGlCQUFpQjtnQkFDeEMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxPQUFPO2dCQUNqQixPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU87Z0JBQ3BCLEtBQUssRUFBRSxHQUFHLENBQUMsS0FBSztnQkFDaEIsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJO2FBQ2Y7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDLENBQUM7SUFDRixlQUFlO0lBQ2YsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRTtRQUMxQixRQUFRLENBQUMsRUFBRSxHQUFHLE1BQU0sQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztLQUM5RDtJQUNELElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUU7UUFDMUIsY0FBYyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUNoQztJQUNELElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7UUFDdkIsY0FBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUM3QjtJQUNELElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUU7UUFDNUIsY0FBYyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztLQUNsQztJQUNELElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7UUFDdkIsUUFBUSxDQUFDLEVBQUUsR0FBRyxNQUFNLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxhQUFhLEVBQUUsQ0FBQyxDQUFDO0tBQ3hEO0lBQ0QsZ0NBQWdDO0lBQ2hDLDhCQUE4QjtJQUM5QixJQUFJO0lBQ0osTUFBTSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRTtRQUNoQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUU7WUFDbEIsSUFBSyxNQUFtQyxDQUFDLFNBQVMsRUFBRTtnQkFDbEQsUUFBUSxDQUFDLE1BQWtDLENBQUMsQ0FBQzthQUM5QztpQkFBTTtnQkFDTCxjQUFjLENBQUMsTUFBK0IsQ0FBQyxDQUFDO2FBQ2pEO1NBQ0Y7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUNILE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzVDLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDOUQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExhbmRpbmdDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbGFuZGluZy9sYW5kaW5nLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7XHJcbiAgUm91dGVDb25maWdGcm9tTW9kdWxlLFxyXG4gIFJvdXRlQ29uZmlnV2l0aENvbXBvbmVudCxcclxuICBSb3V0aW5nQ29uZmlnLFxyXG59IGZyb20gJy4vc29saWQtc2tlbGV0b24tY29uZmlnJztcclxuaW1wb3J0IHsgUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBJbmZvQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2luZm8vaW5mby5jb21wb25lbnQnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlUm91dGVzKGNvbmZpZzogUm91dGluZ0NvbmZpZykge1xyXG4gIGNvbnN0IHJvdXRlczogUm91dGVbXSA9IFtdO1xyXG4gIGNvbnN0IGFkZFJvdXRlID0gKGNmZzogUm91dGVDb25maWdXaXRoQ29tcG9uZW50KSA9PiB7XHJcbiAgICByb3V0ZXMucHVzaCh7XHJcbiAgICAgIHBhdGg6IGNmZy51cmwsXHJcbiAgICAgIGNvbXBvbmVudDogY2ZnLmNvbXBvbmVudCxcclxuICAgICAgZGF0YToge1xyXG4gICAgICAgIHRpdGxlOiBjZmcudGl0bGUsXHJcbiAgICAgICAgc2hvd0luTWVudTogY2ZnLnNob3dJbk1lbnUsXHJcbiAgICAgICAgc2hvd09uTGFuZGluZ1BhZ2U6IGNmZy5zaG93T25MYW5kaW5nUGFnZSxcclxuICAgICAgICBpY29uOiBjZmcubWF0SWNvbixcclxuICAgICAgICBzdmdJY29uOiBjZmcuc3ZnSWNvbixcclxuICAgICAgICBvcmRlcjogY2ZnLm9yZGVyLFxyXG4gICAgICAgIG5hbWU6IGNmZy5uYW1lLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcbiAgfTtcclxuICBjb25zdCBhZGRNb2R1bGVSb3V0ZSA9IChjZmc6IFJvdXRlQ29uZmlnRnJvbU1vZHVsZSkgPT4ge1xyXG4gICAgcm91dGVzLnB1c2goe1xyXG4gICAgICBwYXRoOiBjZmcudXJsLFxyXG4gICAgICBsb2FkQ2hpbGRyZW46IGNmZy5tb2R1bGVJbXBvcnQsXHJcbiAgICAgIGRhdGE6IHtcclxuICAgICAgICB0aXRsZTogY2ZnLnRpdGxlLFxyXG4gICAgICAgIHNob3dJbk1lbnU6IGNmZy5zaG93SW5NZW51LFxyXG4gICAgICAgIHNob3dPbkxhbmRpbmdQYWdlOiBjZmcuc2hvd09uTGFuZGluZ1BhZ2UsXHJcbiAgICAgICAgaWNvbjogY2ZnLm1hdEljb24sXHJcbiAgICAgICAgc3ZnSWNvbjogY2ZnLnN2Z0ljb24sXHJcbiAgICAgICAgb3JkZXI6IGNmZy5vcmRlcixcclxuICAgICAgICBuYW1lOiBjZmcubmFtZSxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gIH07XHJcbiAgLy8gbGFuZGluZyBwYWdlXHJcbiAgaWYgKGNvbmZpZy5sYW5kaW5nLmVuYWJsZWQpIHtcclxuICAgIGFkZFJvdXRlKHsgLi4uY29uZmlnLmxhbmRpbmcsIGNvbXBvbmVudDogTGFuZGluZ0NvbXBvbmVudCB9KTtcclxuICB9XHJcbiAgaWYgKGNvbmZpZy5wcm9maWxlLmVuYWJsZWQpIHtcclxuICAgIGFkZE1vZHVsZVJvdXRlKGNvbmZpZy5wcm9maWxlKTtcclxuICB9XHJcbiAgaWYgKGNvbmZpZy5xdWl6LmVuYWJsZWQpIHtcclxuICAgIGFkZE1vZHVsZVJvdXRlKGNvbmZpZy5xdWl6KTtcclxuICB9XHJcbiAgaWYgKGNvbmZpZy5zbGlkZXNob3cuZW5hYmxlZCkge1xyXG4gICAgYWRkTW9kdWxlUm91dGUoY29uZmlnLnNsaWRlc2hvdyk7XHJcbiAgfVxyXG4gIGlmIChjb25maWcuaW5mby5lbmFibGVkKSB7XHJcbiAgICBhZGRSb3V0ZSh7IC4uLmNvbmZpZy5pbmZvLCBjb21wb25lbnQ6IEluZm9Db21wb25lbnQgfSk7XHJcbiAgfVxyXG4gIC8vIGlmIChjb25maWcucHJpdmFjeS5lbmFibGVkKSB7XHJcbiAgLy8gICBhZGRSb3V0ZShjb25maWcucHJpdmFjeSk7XHJcbiAgLy8gfVxyXG4gIGNvbmZpZy5jdXN0b20/LmZvckVhY2goKGN1c3RvbSkgPT4ge1xyXG4gICAgaWYgKGN1c3RvbS5lbmFibGVkKSB7XHJcbiAgICAgIGlmICgoY3VzdG9tIGFzIFJvdXRlQ29uZmlnV2l0aENvbXBvbmVudCkuY29tcG9uZW50KSB7XHJcbiAgICAgICAgYWRkUm91dGUoY3VzdG9tIGFzIFJvdXRlQ29uZmlnV2l0aENvbXBvbmVudCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYWRkTW9kdWxlUm91dGUoY3VzdG9tIGFzIFJvdXRlQ29uZmlnRnJvbU1vZHVsZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9KTtcclxuICByb3V0ZXMucHVzaCh7IHBhdGg6ICcqKicsIHJlZGlyZWN0VG86ICcnIH0pO1xyXG4gIHJldHVybiByb3V0ZXMuc29ydCgoYSwgYikgPT4gYS5kYXRhPy5vcmRlciAtIGIuZGF0YT8ub3JkZXIpO1xyXG59XHJcbiJdfQ==
