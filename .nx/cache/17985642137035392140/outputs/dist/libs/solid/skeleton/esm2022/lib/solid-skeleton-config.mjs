import { InjectionToken } from '@angular/core';
export const defaultSkeletonConfig = {
  feedbackEnabled: true,
  glossary: {
    enabled: true,
    matIcon: 'help',
  },
  routingConfig: {
    landing: {
      enabled: true,
      showOnLandingPage: false,
      showInMenu: true,
      url: '',
      title: 'Startseite',
      order: 0,
      matIcon: 'home',
    },
    profile: {
      enabled: true,
      showOnLandingPage: true,
      showInMenu: true,
      url: 'profiles',
      title: 'Steckbriefe',
      order: 1,
      matIcon: 'list',
      moduleImport: () =>
        import('@zentrumnawi/solid-profile').then((m) => m.SolidProfileModule),
    },
    quiz: {
      enabled: true,
      showOnLandingPage: true,
      showInMenu: true,
      url: 'quiz',
      title: 'Selbsttest',
      order: 2,
      matIcon: 'question_answer',
      moduleImport: () =>
        import('@zentrumnawi/solid-quiz').then((m) => m.SolidQuizModule),
    },
    slideshow: {
      enabled: true,
      showOnLandingPage: true,
      showInMenu: true,
      url: 'slideshow',
      title: 'Bestimmungshelfer',
      order: 3,
      matIcon: 'help',
      moduleImport: () =>
        import('@zentrumnawi/solid-slideshow').then(
          (m) => m.SolidSlideshowModule
        ),
    },
    info: {
      enabled: true,
      showOnLandingPage: true,
      showInMenu: true,
      url: 'info',
      title: 'Info | Datenschutz',
      order: 4,
      matIcon: 'info',
    },
    // privacy: {
    //   enabled: true,
    //   showOnLandingPage: true,
    //   showInMenu: true,
    //   url: 'privacy',
    //   title: 'Datenschutz',
    //   order: 5,
    //   matIcon: 'info',
    // },
  },
};
export const SOLID_SKELETON_CONFIG = new InjectionToken(
  'solid-skeleton-config'
);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29saWQtc2tlbGV0b24tY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9zb2xpZC9za2VsZXRvbi9zcmMvbGliL3NvbGlkLXNrZWxldG9uLWNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFRLE1BQU0sZUFBZSxDQUFDO0FBMkVyRCxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FHOUI7SUFDRixlQUFlLEVBQUUsSUFBSTtJQUNyQixRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsSUFBSTtRQUNiLE9BQU8sRUFBRSxNQUFNO0tBQ2hCO0lBQ0QsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFO1lBQ1AsT0FBTyxFQUFFLElBQUk7WUFDYixpQkFBaUIsRUFBRSxLQUFLO1lBQ3hCLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLEdBQUcsRUFBRSxFQUFFO1lBQ1AsS0FBSyxFQUFFLFlBQVk7WUFDbkIsS0FBSyxFQUFFLENBQUM7WUFDUixPQUFPLEVBQUUsTUFBTTtTQUNoQjtRQUNELE9BQU8sRUFBRTtZQUNQLE9BQU8sRUFBRSxJQUFJO1lBQ2IsaUJBQWlCLEVBQUUsSUFBSTtZQUN2QixVQUFVLEVBQUUsSUFBSTtZQUNoQixHQUFHLEVBQUUsVUFBVTtZQUNmLEtBQUssRUFBRSxhQUFhO1lBQ3BCLEtBQUssRUFBRSxDQUFDO1lBQ1IsT0FBTyxFQUFFLE1BQU07WUFDZixZQUFZLEVBQUUsR0FBRyxFQUFFLENBQ2pCLE1BQU0sQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDO1NBQ3pFO1FBQ0QsSUFBSSxFQUFFO1lBQ0osT0FBTyxFQUFFLElBQUk7WUFDYixpQkFBaUIsRUFBRSxJQUFJO1lBQ3ZCLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLEdBQUcsRUFBRSxNQUFNO1lBQ1gsS0FBSyxFQUFFLFlBQVk7WUFDbkIsS0FBSyxFQUFFLENBQUM7WUFDUixPQUFPLEVBQUUsaUJBQWlCO1lBQzFCLFlBQVksRUFBRSxHQUFHLEVBQUUsQ0FDakIsTUFBTSxDQUFDLHlCQUF5QixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDO1NBQ25FO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsT0FBTyxFQUFFLElBQUk7WUFDYixpQkFBaUIsRUFBRSxJQUFJO1lBQ3ZCLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLEdBQUcsRUFBRSxXQUFXO1lBQ2hCLEtBQUssRUFBRSxtQkFBbUI7WUFDMUIsS0FBSyxFQUFFLENBQUM7WUFDUixPQUFPLEVBQUUsTUFBTTtZQUNmLFlBQVksRUFBRSxHQUFHLEVBQUUsQ0FDakIsTUFBTSxDQUFDLDhCQUE4QixDQUFDLENBQUMsSUFBSSxDQUN6QyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLG9CQUFvQixDQUM5QjtTQUNKO1FBQ0QsSUFBSSxFQUFFO1lBQ0osT0FBTyxFQUFFLElBQUk7WUFDYixpQkFBaUIsRUFBRSxJQUFJO1lBQ3ZCLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLEdBQUcsRUFBRSxNQUFNO1lBQ1gsS0FBSyxFQUFFLG9CQUFvQjtZQUMzQixLQUFLLEVBQUUsQ0FBQztZQUNSLE9BQU8sRUFBRSxNQUFNO1NBQ2hCO1FBQ0QsYUFBYTtRQUNiLG1CQUFtQjtRQUNuQiw2QkFBNkI7UUFDN0Isc0JBQXNCO1FBQ3RCLG9CQUFvQjtRQUNwQiwwQkFBMEI7UUFDMUIsY0FBYztRQUNkLHFCQUFxQjtRQUNyQixLQUFLO0tBQ047Q0FDRixDQUFDO0FBS0YsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQ2hDLElBQUksY0FBYyxDQUE4Qix1QkFBdUIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4sIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTG9hZENoaWxkcmVuIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuaW1wb3J0IHsgRXJyb3JIYW5kbGVyT3B0aW9ucyB9IGZyb20gJ0BzZW50cnkvYW5ndWxhcic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJvdXRlQ29uZmlnIHtcclxuICBlbmFibGVkOiBib29sZWFuO1xyXG4gIHNob3dPbkxhbmRpbmdQYWdlOiBib29sZWFuO1xyXG4gIHNob3dJbk1lbnU6IGJvb2xlYW47XHJcbiAgdXJsOiBzdHJpbmc7XHJcbiAgdGl0bGU6IHN0cmluZztcclxuICBvcmRlcjogbnVtYmVyO1xyXG4gIG1hdEljb24/OiBzdHJpbmc7XHJcbiAgc3ZnSWNvbj86IHN0cmluZztcclxuICBuYW1lPzogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgdHlwZSBSb3V0ZUNvbmZpZ1dpdGhDb21wb25lbnQgPSBSb3V0ZUNvbmZpZyAmIHsgY29tcG9uZW50OiBUeXBlPGFueT4gfTtcclxuXHJcbmV4cG9ydCB0eXBlIFJvdXRlQ29uZmlnRnJvbU1vZHVsZSA9IFJvdXRlQ29uZmlnICYge1xyXG4gIG1vZHVsZUltcG9ydDogTG9hZENoaWxkcmVuO1xyXG59O1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBSb3V0aW5nQ29uZmlnIHtcclxuICBsYW5kaW5nOiBSb3V0ZUNvbmZpZztcclxuICBpbmZvOiBSb3V0ZUNvbmZpZztcclxuICAvLyBwcml2YWN5OiBSb3V0ZUNvbmZpZ1dpdGhDb21wb25lbnQ7XHJcbiAgcHJvZmlsZTogUm91dGVDb25maWdGcm9tTW9kdWxlO1xyXG4gIHF1aXo6IFJvdXRlQ29uZmlnRnJvbU1vZHVsZTtcclxuICBzbGlkZXNob3c6IFJvdXRlQ29uZmlnRnJvbU1vZHVsZTtcclxuICBjdXN0b20/OiAoUm91dGVDb25maWdXaXRoQ29tcG9uZW50IHwgUm91dGVDb25maWdGcm9tTW9kdWxlKVtdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFNlbnRyeUNvbmZpZyB7XHJcbiAgZXJyb3JIYW5kbGVyT3B0aW9ucz86IEVycm9ySGFuZGxlck9wdGlvbnM7XHJcbiAgZHNuOiBzdHJpbmc7XHJcbiAgZW52aXJvbm1lbnQ6IHN0cmluZztcclxuICB2ZXJzaW9uOiB7IHNlbXZlcjogeyB2ZXJzaW9uOiBzdHJpbmcgfSB9O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEludGVybmFsU29saWRTa2VsZXRvbkNvbmZpZyB7XHJcbiAgZmVlZGJhY2tFbmFibGVkOiBib29sZWFuO1xyXG4gIGluZm9QYWdlQ29udGVudDogVHlwZTxhbnk+O1xyXG4gIHByaXZhY3lDb250ZW50OiBUeXBlPGFueT47XHJcbiAgZ2xvc3Nhcnk6IHtcclxuICAgIGVuYWJsZWQ6IGJvb2xlYW47XHJcbiAgICBzdmdJY29uPzogc3RyaW5nO1xyXG4gICAgbWF0SWNvbj86IHN0cmluZztcclxuICB9O1xyXG4gIHJvdXRpbmdDb25maWc6IFJvdXRpbmdDb25maWc7XHJcbiAgc2VudHJ5PzogU2VudHJ5Q29uZmlnO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJlcXVpcmVkRXh0ZXJuYWxDb25maWcge1xyXG4gIGluZm9QYWdlQ29udGVudDogVHlwZTxhbnk+O1xyXG4gIHByaXZhY3lDb250ZW50OiBUeXBlPGFueT47XHJcbiAgcm91dGluZ0NvbmZpZzoge1xyXG4gICAgLy8gcHJpdmFjeToge1xyXG4gICAgLy8gICBjb21wb25lbnQ6IFR5cGU8YW55PjtcclxuICAgIC8vIH07XHJcbiAgfTtcclxuICBzZW50cnk/OiBTZW50cnlDb25maWc7XHJcbn1cclxuXHJcbnR5cGUgY29tcG9uZW50UHJvcGVydHlLZXlzID0gJ2NvbXBvbmVudCcgfCAnaW5mb1BhZ2VDb250ZW50JyB8ICdwcml2YWN5Q29udGVudCc7XHJcblxyXG5leHBvcnQgdHlwZSBQYXJ0aWFsRGVlcDxUPiA9IHtcclxuICBbUCBpbiBFeGNsdWRlPGtleW9mIFQsIGNvbXBvbmVudFByb3BlcnR5S2V5cz5dPzogUGFydGlhbERlZXA8VFtQXT47XHJcbn07XHJcblxyXG50eXBlIFBpY2s8VCwgSyBleHRlbmRzIGtleW9mIFQ+ID0ge1xyXG4gIFtQIGluIEtdOiBPbWl0PFRbUF0sIGNvbXBvbmVudFByb3BlcnR5S2V5cz47XHJcbn07XHJcbnR5cGUgRXhjbHVkZTxULCBVPiA9IFQgZXh0ZW5kcyBVID8gbmV2ZXIgOiBUO1xyXG50eXBlIE9taXQ8VCwgSyBleHRlbmRzIGtleW9mIGFueT4gPSBQaWNrPFQsIEV4Y2x1ZGU8a2V5b2YgVCwgSz4+O1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlZmF1bHRTa2VsZXRvbkNvbmZpZzogT21pdDxcclxuICBJbnRlcm5hbFNvbGlkU2tlbGV0b25Db25maWcsXHJcbiAgY29tcG9uZW50UHJvcGVydHlLZXlzXHJcbj4gPSB7XHJcbiAgZmVlZGJhY2tFbmFibGVkOiB0cnVlLFxyXG4gIGdsb3NzYXJ5OiB7XHJcbiAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgbWF0SWNvbjogJ2hlbHAnLFxyXG4gIH0sXHJcbiAgcm91dGluZ0NvbmZpZzoge1xyXG4gICAgbGFuZGluZzoge1xyXG4gICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICBzaG93T25MYW5kaW5nUGFnZTogZmFsc2UsXHJcbiAgICAgIHNob3dJbk1lbnU6IHRydWUsXHJcbiAgICAgIHVybDogJycsXHJcbiAgICAgIHRpdGxlOiAnU3RhcnRzZWl0ZScsXHJcbiAgICAgIG9yZGVyOiAwLFxyXG4gICAgICBtYXRJY29uOiAnaG9tZScsXHJcbiAgICB9LFxyXG4gICAgcHJvZmlsZToge1xyXG4gICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICBzaG93T25MYW5kaW5nUGFnZTogdHJ1ZSxcclxuICAgICAgc2hvd0luTWVudTogdHJ1ZSxcclxuICAgICAgdXJsOiAncHJvZmlsZXMnLFxyXG4gICAgICB0aXRsZTogJ1N0ZWNrYnJpZWZlJyxcclxuICAgICAgb3JkZXI6IDEsXHJcbiAgICAgIG1hdEljb246ICdsaXN0JyxcclxuICAgICAgbW9kdWxlSW1wb3J0OiAoKSA9PlxyXG4gICAgICAgIGltcG9ydCgnQHplbnRydW1uYXdpL3NvbGlkLXByb2ZpbGUnKS50aGVuKChtKSA9PiBtLlNvbGlkUHJvZmlsZU1vZHVsZSksXHJcbiAgICB9LFxyXG4gICAgcXVpejoge1xyXG4gICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICBzaG93T25MYW5kaW5nUGFnZTogdHJ1ZSxcclxuICAgICAgc2hvd0luTWVudTogdHJ1ZSxcclxuICAgICAgdXJsOiAncXVpeicsXHJcbiAgICAgIHRpdGxlOiAnU2VsYnN0dGVzdCcsXHJcbiAgICAgIG9yZGVyOiAyLFxyXG4gICAgICBtYXRJY29uOiAncXVlc3Rpb25fYW5zd2VyJyxcclxuICAgICAgbW9kdWxlSW1wb3J0OiAoKSA9PlxyXG4gICAgICAgIGltcG9ydCgnQHplbnRydW1uYXdpL3NvbGlkLXF1aXonKS50aGVuKChtKSA9PiBtLlNvbGlkUXVpek1vZHVsZSksXHJcbiAgICB9LFxyXG4gICAgc2xpZGVzaG93OiB7XHJcbiAgICAgIGVuYWJsZWQ6IHRydWUsXHJcbiAgICAgIHNob3dPbkxhbmRpbmdQYWdlOiB0cnVlLFxyXG4gICAgICBzaG93SW5NZW51OiB0cnVlLFxyXG4gICAgICB1cmw6ICdzbGlkZXNob3cnLFxyXG4gICAgICB0aXRsZTogJ0Jlc3RpbW11bmdzaGVsZmVyJyxcclxuICAgICAgb3JkZXI6IDMsXHJcbiAgICAgIG1hdEljb246ICdoZWxwJyxcclxuICAgICAgbW9kdWxlSW1wb3J0OiAoKSA9PlxyXG4gICAgICAgIGltcG9ydCgnQHplbnRydW1uYXdpL3NvbGlkLXNsaWRlc2hvdycpLnRoZW4oXHJcbiAgICAgICAgICAobSkgPT4gbS5Tb2xpZFNsaWRlc2hvd01vZHVsZVxyXG4gICAgICAgICksXHJcbiAgICB9LFxyXG4gICAgaW5mbzoge1xyXG4gICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICBzaG93T25MYW5kaW5nUGFnZTogdHJ1ZSxcclxuICAgICAgc2hvd0luTWVudTogdHJ1ZSxcclxuICAgICAgdXJsOiAnaW5mbycsXHJcbiAgICAgIHRpdGxlOiAnSW5mbyB8IERhdGVuc2NodXR6JyxcclxuICAgICAgb3JkZXI6IDQsXHJcbiAgICAgIG1hdEljb246ICdpbmZvJyxcclxuICAgIH0sXHJcbiAgICAvLyBwcml2YWN5OiB7XHJcbiAgICAvLyAgIGVuYWJsZWQ6IHRydWUsXHJcbiAgICAvLyAgIHNob3dPbkxhbmRpbmdQYWdlOiB0cnVlLFxyXG4gICAgLy8gICBzaG93SW5NZW51OiB0cnVlLFxyXG4gICAgLy8gICB1cmw6ICdwcml2YWN5JyxcclxuICAgIC8vICAgdGl0bGU6ICdEYXRlbnNjaHV0eicsXHJcbiAgICAvLyAgIG9yZGVyOiA1LFxyXG4gICAgLy8gICBtYXRJY29uOiAnaW5mbycsXHJcbiAgICAvLyB9LFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgdHlwZSBTb2xpZFNrZWxldG9uQ29uZmlnID0gUGFydGlhbERlZXA8SW50ZXJuYWxTb2xpZFNrZWxldG9uQ29uZmlnPiAmXHJcbiAgUmVxdWlyZWRFeHRlcm5hbENvbmZpZztcclxuXHJcbmV4cG9ydCBjb25zdCBTT0xJRF9TS0VMRVRPTl9DT05GSUcgPVxyXG4gIG5ldyBJbmplY3Rpb25Ub2tlbjxJbnRlcm5hbFNvbGlkU2tlbGV0b25Db25maWc+KCdzb2xpZC1za2VsZXRvbi1jb25maWcnKTtcclxuIl19
