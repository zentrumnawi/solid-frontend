export class MediaModel {
  _mediaObject;
  constructor(_mediaObject) {
    this._mediaObject = _mediaObject;
  }
  get mediaType() {
    return this._mediaObject.media_format;
  }
  get isLandscape() {
    return (
      this._mediaObject.img_original_width >
      this._mediaObject.img_original_height
    );
  }
  get attributions() {
    const author = this._mediaObject.author;
    const license = this._mediaObject.license;
    if (author && license) {
      return `${this._mediaObject.author} (${this._mediaObject.license})`;
    }
    if (license) {
      return license;
    }
    if (author) {
      return author;
    }
    return undefined;
  }
  get description() {
    return this._mediaObject.description;
  }
  get audiosrc() {
    return this._mediaObject.audio;
  }
  //   public get audioduration(): string | undefined {
  //     return this._mediaObject.audio_duration;
  //   }
  get alt() {
    return this._mediaObject.img_alt;
  }
  get author() {
    return this._mediaObject.author;
  }
  get license() {
    return this._mediaObject.license;
  }
  getRawImage(size) {
    if (this.mediaType === 'image') {
      return this._mediaObject.file[size];
    }
    if (this.mediaType === 'audio') {
      return 'assets/profile/audio.svg';
    }
    if (this.mediaType === 'video') {
      return 'assets/profile/video.svg';
    }
    return 'assets/profile/no_thumbnail.svg';
  }
  getSrc() {
    if (this.mediaType === 'video' || this.mediaType === 'audio') {
      return this._mediaObject.file['original'];
    }
    return null;
  }
  get deepZoomLink() {
    if (!this._mediaObject.dzi_file) {
      return false;
    }
    return this._mediaObject.dzi_file;
  }
  get getTitle() {
    return this._mediaObject.title;
  }
  get getProfilePosition() {
    return this._mediaObject.profile_position;
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVkaWEubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3NvbGlkL2NvcmUvc3JjL2xpYi9tb2RlbHMvbWVkaWEubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxPQUFPLFVBQVU7SUFDRDtJQUFwQixZQUFvQixZQUE4QjtRQUE5QixpQkFBWSxHQUFaLFlBQVksQ0FBa0I7SUFBRyxDQUFDO0lBRXRELElBQVcsU0FBUztRQUNsQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDO0lBQ3hDLENBQUM7SUFFRCxJQUFXLFdBQVc7UUFDcEIsT0FBTyxDQUNMLElBQUksQ0FBQyxZQUFZLENBQUMsa0JBQWtCO1lBQ3BDLElBQUksQ0FBQyxZQUFZLENBQUMsbUJBQW1CLENBQ3RDLENBQUM7SUFDSixDQUFDO0lBQ0QsSUFBVyxZQUFZO1FBQ3JCLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDO1FBQ3hDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDO1FBQzFDLElBQUksTUFBTSxJQUFJLE9BQU8sRUFBRTtZQUNyQixPQUFPLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLEdBQUcsQ0FBQztTQUNyRTtRQUNELElBQUksT0FBTyxFQUFFO1lBQ1gsT0FBTyxPQUFPLENBQUM7U0FDaEI7UUFDRCxJQUFJLE1BQU0sRUFBRTtZQUNWLE9BQU8sTUFBTSxDQUFDO1NBQ2Y7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBVyxXQUFXO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUM7SUFDdkMsQ0FBQztJQUVELElBQVcsUUFBUTtRQUNqQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxxREFBcUQ7SUFDckQsK0NBQStDO0lBQy9DLE1BQU07SUFFTixJQUFXLEdBQUc7UUFDWixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDO0lBQ25DLENBQUM7SUFFRCxJQUFXLE1BQU07UUFDZixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDO0lBQ2xDLENBQUM7SUFFRCxJQUFXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztJQUNuQyxDQUFDO0lBRU0sV0FBVyxDQUNoQixJQUE2RDtRQUU3RCxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssT0FBTyxFQUFFO1lBQzlCLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDckM7UUFDRCxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssT0FBTyxFQUFFO1lBQzlCLE9BQU8sMEJBQTBCLENBQUM7U0FDbkM7UUFDRCxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssT0FBTyxFQUFFO1lBQzlCLE9BQU8sMEJBQTBCLENBQUM7U0FDbkM7UUFDRCxPQUFPLGlDQUFpQyxDQUFDO0lBQzNDLENBQUM7SUFDTSxNQUFNO1FBQ1gsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLE9BQU8sSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLE9BQU8sRUFBRTtZQUM1RCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQzNDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsSUFBVyxZQUFZO1FBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRTtZQUMvQixPQUFPLEtBQUssQ0FBQztTQUNkO1FBQ0QsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztJQUNwQyxDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUM7SUFDakMsQ0FBQztJQUVELElBQVcsa0JBQWtCO1FBQzNCLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQztJQUM1QyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZWRpYU9iamVjdE1vZGVsIH0gZnJvbSAnLi9tZWRpYS1vYmplY3QubW9kZWwnO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1lZGlhTW9kZWwge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX21lZGlhT2JqZWN0OiBNZWRpYU9iamVjdE1vZGVsKSB7fVxyXG5cclxuICBwdWJsaWMgZ2V0IG1lZGlhVHlwZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9tZWRpYU9iamVjdC5tZWRpYV9mb3JtYXQ7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGlzTGFuZHNjYXBlKCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgdGhpcy5fbWVkaWFPYmplY3QuaW1nX29yaWdpbmFsX3dpZHRoID5cclxuICAgICAgdGhpcy5fbWVkaWFPYmplY3QuaW1nX29yaWdpbmFsX2hlaWdodFxyXG4gICAgKTtcclxuICB9XHJcbiAgcHVibGljIGdldCBhdHRyaWJ1dGlvbnMoKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcclxuICAgIGNvbnN0IGF1dGhvciA9IHRoaXMuX21lZGlhT2JqZWN0LmF1dGhvcjtcclxuICAgIGNvbnN0IGxpY2Vuc2UgPSB0aGlzLl9tZWRpYU9iamVjdC5saWNlbnNlO1xyXG4gICAgaWYgKGF1dGhvciAmJiBsaWNlbnNlKSB7XHJcbiAgICAgIHJldHVybiBgJHt0aGlzLl9tZWRpYU9iamVjdC5hdXRob3J9ICgke3RoaXMuX21lZGlhT2JqZWN0LmxpY2Vuc2V9KWA7XHJcbiAgICB9XHJcbiAgICBpZiAobGljZW5zZSkge1xyXG4gICAgICByZXR1cm4gbGljZW5zZTtcclxuICAgIH1cclxuICAgIGlmIChhdXRob3IpIHtcclxuICAgICAgcmV0dXJuIGF1dGhvcjtcclxuICAgIH1cclxuICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGRlc2NyaXB0aW9uKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XHJcbiAgICByZXR1cm4gdGhpcy5fbWVkaWFPYmplY3QuZGVzY3JpcHRpb247XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGF1ZGlvc3JjKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XHJcbiAgICByZXR1cm4gdGhpcy5fbWVkaWFPYmplY3QuYXVkaW87XHJcbiAgfVxyXG5cclxuICAvLyAgIHB1YmxpYyBnZXQgYXVkaW9kdXJhdGlvbigpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xyXG4gIC8vICAgICByZXR1cm4gdGhpcy5fbWVkaWFPYmplY3QuYXVkaW9fZHVyYXRpb247XHJcbiAgLy8gICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgYWx0KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5fbWVkaWFPYmplY3QuaW1nX2FsdDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgYXV0aG9yKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XHJcbiAgICByZXR1cm4gdGhpcy5fbWVkaWFPYmplY3QuYXV0aG9yO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBsaWNlbnNlKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XHJcbiAgICByZXR1cm4gdGhpcy5fbWVkaWFPYmplY3QubGljZW5zZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRSYXdJbWFnZShcclxuICAgIHNpemU6ICd0aHVtYm5haWwnIHwgJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2xhcmdlJyB8ICdvcmlnaW5hbCdcclxuICApIHtcclxuICAgIGlmICh0aGlzLm1lZGlhVHlwZSA9PT0gJ2ltYWdlJykge1xyXG4gICAgICByZXR1cm4gdGhpcy5fbWVkaWFPYmplY3QuZmlsZVtzaXplXTtcclxuICAgIH1cclxuICAgIGlmICh0aGlzLm1lZGlhVHlwZSA9PT0gJ2F1ZGlvJykge1xyXG4gICAgICByZXR1cm4gJ2Fzc2V0cy9wcm9maWxlL2F1ZGlvLnN2Zyc7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5tZWRpYVR5cGUgPT09ICd2aWRlbycpIHtcclxuICAgICAgcmV0dXJuICdhc3NldHMvcHJvZmlsZS92aWRlby5zdmcnO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuICdhc3NldHMvcHJvZmlsZS9ub190aHVtYm5haWwuc3ZnJztcclxuICB9XHJcbiAgcHVibGljIGdldFNyYygpIHtcclxuICAgIGlmICh0aGlzLm1lZGlhVHlwZSA9PT0gJ3ZpZGVvJyB8fCB0aGlzLm1lZGlhVHlwZSA9PT0gJ2F1ZGlvJykge1xyXG4gICAgICByZXR1cm4gdGhpcy5fbWVkaWFPYmplY3QuZmlsZVsnb3JpZ2luYWwnXTtcclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBkZWVwWm9vbUxpbmsoKTogc3RyaW5nIHwgZmFsc2Uge1xyXG4gICAgaWYgKCF0aGlzLl9tZWRpYU9iamVjdC5kemlfZmlsZSkge1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5fbWVkaWFPYmplY3QuZHppX2ZpbGU7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGdldFRpdGxlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX21lZGlhT2JqZWN0LnRpdGxlO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBnZXRQcm9maWxlUG9zaXRpb24oKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbWVkaWFPYmplY3QucHJvZmlsZV9wb3NpdGlvbjtcclxuICB9XHJcbn1cclxuIl19
