@use '@angular/material' as mat;

@mixin solid-quiz-question-theme($mat-theme, $quiz-correct, $quiz-incorrect) {
  $accent: map-get($mat-theme, accent);
  $foreground: map-get($mat-theme, foreground);
  $warn: map-get($mat-theme, warn);
  $quiz-correct: mat.define-palette(mat.$green-palette, 400, 200, 600);
  $quiz-wrong: mat.define-palette(mat.$red-palette, 400, 200, 600);
  solid-quiz-question {
    mat-radio-group {
      display: flex;
      flex-direction: column;

      mat-radio-button {
        &.correct {
          
          .mdc-radio__outer-circle {
            border-color: mat.get-color-from-palette($quiz-correct) !important;
          }
        }

        &.incorrect {
          
          .mdc-radio__outer-circle {
            border-color: mat.get-color-from-palette(
              $quiz-incorrect
            ) !important;
          }
        }
      }
    }
    
    mat-card-content.multiple-choice {
      
      mat-checkbox {
        &.correctSelected {
          
          .mdc-checkbox__background {
            background-color: mat.get-color-from-palette($quiz-correct) !important;
          }
          
          .mdc-checkbox__label {
            color: black !important;
          }
        }
        &.correctUnselected {
          
          .mdc-checkbox__background {
            background-color: mat.get-color-from-palette(
              $quiz-correct,
              lighter
            ) !important;
          }
        }

        &.incorrectSelected {
          
          .mdc-checkbox__background {
            background-color: mat.get-color-from-palette($quiz-incorrect) !important;
          }
          
          .mdc-checkbox__label {
            color: black !important;
          }
        }
        &.incorrectUnselected {

          .mdc-checkbox__background {
            background-color: mat.get-color-from-palette(
              $quiz-incorrect,
              lighter
            ) !important;
          }
          
          .mdc-checkbox__mixedmark {
            &:after {
              color: mat.get-color-from-palette($quiz-incorrect, lighter);
            }
          }
        }
      }
    }

    span.feedback {
      color: mat.get-color-from-palette($foreground, text);
    }

    .cdk-drag {
      &.correctPosition {
        border-right: 9px solid mat.get-color-from-palette($quiz-correct) !important;
      }

      &.incorrectPosition {
        border-right: 9px solid mat.get-color-from-palette($quiz-incorrect) !important;
      }

      &.subsequence {
        border-right: 9px solid mat.get-color-from-palette($accent) !important;
        border-left: 9px solid mat.get-color-from-palette($quiz-correct) !important;
      }
    }

    .trueBtn {
      &:focus {
        background-color: mat.get-color-from-palette($app-primary);
        border-color: white;
        color: white;
      }

      &.correctUnselected {
        border-color: mat.get-color-from-palette($quiz-correct) !important;
        color: black !important;
      }

      &.incorrectUnselected {
        border-color: mat.get-color-from-palette($quiz-correct) !important;
        color: black !important;
        opacity: 0.4;
      }

      &.correctSelected {
        border-color: mat.get-color-from-palette($quiz-correct) !important;
        background-color: mat.get-color-from-palette($quiz-correct) !important;
        color: white !important;
      }

      &.incorrectSelected {
        border-color: mat.get-color-from-palette($quiz-correct) !important;
        background-color: mat.get-color-from-palette($quiz-correct) !important;
        color: white !important;
        opacity: 0.4;
      }
    }

    .falseBtn {
      &:focus {
        background-color: mat.get-color-from-palette($app-primary);
        border-color: white;
        color: white;
      }

      &.correctUnselected {
        border-color: mat.get-color-from-palette($quiz-incorrect) !important;
        color: black !important;
      }

      &.incorrectUnselected {
        border-color: mat.get-color-from-palette($quiz-incorrect) !important;
        color: black !important;
        opacity: 0.4;
      }

      &.correctSelected {
        border-color: mat.get-color-from-palette($quiz-incorrect) !important;
        background-color: mat.get-color-from-palette(
          $quiz-incorrect
        ) !important;
        color: white !important;
      }

      &.incorrectSelected {
        border-color: mat.get-color-from-palette($quiz-incorrect) !important;
        background-color: mat.get-color-from-palette(
          $quiz-incorrect
        ) !important;
        color: white !important;
        opacity: 0.4;
      }
    }

    .correctIcon {
      color: mat.get-color-from-palette($quiz-correct);
    }

    .incorrectIcon {
      color: mat.get-color-from-palette($quiz-incorrect);
    }
    
    mat-radio-button .mdc-radio--disabled .mdc-radio__inner-circle {
      background-color: white !important;
    }
    
    .mdc-checkbox__mixedmark {
      &:after {
        color: mat.get-color-from-palette($quiz-incorrect);
      }
    }
    
    mat-slider:not(
      .mdc-slider--disabled
      ).cdk-focused.mdc-slider__thumb--with-indicator
      .mdc-slider__thumb {
      border-color: mat.get-color-from-palette($accent) !important;
      background-color: white !important;
    }
    
    mat-slider {
      &.correctRange {
        .mdc-slider__track--active_fill {
          border-color: mat.get-color-from-palette(
            $quiz-correct
          ) !important;         
        }
        
        .mdc-slider__thumb .mdc-slider__thumb-knob {
          border-color: mat.get-color-from-palette(
            $quiz-correct
          ) !important;
          border: none !important;
        }
      }

      &.incorrectRange {
        .mdc-slider__track--active_fill {
          border-color: mat.get-color-from-palette(
            $quiz-incorrect
          ) !important;
        }
        
        .mdc-slider__thumb-knob {
          background-color: mat.get-color-from-palette(
            $quiz-incorrect
          ) !important;
          border: none !important;
        }
      }
    }

    #correctThumb {
      &.correct {
        background-color: mat.get-color-from-palette($quiz-correct);
      }

      &.incorrect {
        border: solid 2px mat.get-color-from-palette($quiz-correct);
        background-color: white;

        p {
          color: black !important;
        }
      }
    }
    #toleranceBar {
      background-image: radial-gradient(
        circle,
        mat.get-color-from-palette($quiz-correct, 0.7),
        rgba(255, 0, 0, 0)
      );
    }

    #selectedThumb {
      &.correct {
        border: solid 2px mat.get-color-from-palette($quiz-correct);
      }
      &.incorrect {
        border: solid 2px mat.get-color-from-palette($quiz-incorrect);
        background-color: white;
      }
    }

    .minTick {
      background-color: mat.get-color-from-palette($app-primary);
      z-index: 1;

      &.correct {
        background-color: mat.get-color-from-palette($quiz-correct);
      }

      &.incorrect {
        // since the slider is disabled (and therefore toned down), the tick color can not be identical to the slider color anymore
        background-color: rgb(238, 176, 176);
      }
    }
  }
}
