@use '@angular/material' as mat;

@mixin solid-quiz-question-theme($mat-theme, $quiz-correct, $quiz-incorrect) {
  $accent: map-get($mat-theme, accent);
  $foreground: map-get($mat-theme, foreground);
  $warn: map-get($mat-theme, warn);
  $quiz-correct: mat.define-palette(mat.$green-palette, 400, 200, 600);
  $quiz-wrong: mat.define-palette(mat.$red-palette, 400, 200, 600);
  solid-quiz-question {
    mat-radio-group {
      display: flex;
      flex-direction: column;

      mat-radio-button {
        &.correct {
          .mat-radio-outer-circle {
            border-color: mat.get-color-from-palette($quiz-correct) !important;
          }
        }

        &.incorrect {
          .mat-radio-outer-circle {
            border-color: mat.get-color-from-palette(
              $quiz-incorrect
            ) !important;
          }
        }
      }
    }

    mat-card-content.multiple-choice {
      mat-checkbox {
        &.correctselected {
          .mat-checkbox-background {
            background-color: mat.get-color-from-palette($quiz-correct);
          }
        }
        &.correctunselected {
          .mat-checkbox-background {
            background-color: mat.get-color-from-palette(
              $quiz-correct,
              lighter
            );
          }
        }

        &.incorrectselected {
          .mat-checkbox-background {
            background-color: mat.get-color-from-palette($quiz-incorrect);
          }
        }
        &.incorrectunselected {
          .mat-checkbox-background {
            background-color: mat.get-color-from-palette(
              $quiz-incorrect,
              lighter
            );
          }
        }
      }
    }

    span.feedback {
      color: mat.get-color-from-palette($foreground, text);
    }

    .cdk-drag {
      &.correctPosition {
        border-right: 9px solid mat.get-color-from-palette($quiz-correct) !important;
      }

      &.incorrectPosition {
        border-right: 9px solid mat.get-color-from-palette($quiz-incorrect) !important;
      }

      &.subsequence {
        border-right: 9px solid mat.get-color-from-palette($accent) !important;
        border-left: 9px solid mat.get-color-from-palette($quiz-correct) !important;
      }
    }

    .range-container {
      border: solid 2px mat.get-color-from-palette($app-primary);
    }

    .trueBtn {
      border: solid 2px mat.get-color-from-palette($accent);

      &:focus {
        background-color: mat.get-color-from-palette($app-primary);
        border-color: white;
        color: white;
      }

      &.correct {
        border-color: mat.get-color-from-palette($quiz-correct) !important;
      }

      &.incorrect {
        border-color: mat.get-color-from-palette($quiz-incorrect) !important;
      }
    }

    .falseBtn {
      border: solid 2px mat.get-color-from-palette($app-primary);

      &:focus {
        background-color: mat.get-color-from-palette($accent);
        border-color: white;
        color: white;
      }

      &.correct {
        border-color: mat.get-color-from-palette($quiz-correct) !important;
      }

      &.incorrect {
        border-color: mat.get-color-from-palette($quiz-incorrect) !important;
      }
    }

    .correctIcon {
      color: mat.get-color-from-palette($quiz-correct);
    }

    .incorrectIcon {
      color: mat.get-color-from-palette($quiz-incorrect);
    }

    mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {
      background-color: white !important;
    }
  }
}
